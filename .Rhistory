shiny::runApp('finalproj')
runApp('finalproj')
View(specinfo)
runApp('finalproj')
specinfo[position == "top",]$rrate
specinfo[position == "top",]$win_rate
as.numeric(specinfo[position == "Top",]$win_rate)
rrate
rwin %>%
str_match_all("[0-9]{2}.[0-9]+")
rwin
rwin %>%
str_match_all("[0-9]+.[0-9]+")
library(DBI)
library(tidyverse)
library(rvest)
library(httr)
library(stringr)
library(lubridate)
readRenviron(".Renviron")
host <- "ruby.db.elephantsql.com"
con <- dbConnect(
RPostgres::Postgres(),
dbname = "avlkfgtq",
user = "avlkfgtq", password = Sys.getenv("mykey"), host = host
)
html <- read_html("https://www.op.gg/champion/statistics")
# read the info from the websit
champname <- html %>%
html_nodes("a") %>%
html_nodes("div.champion-index__champion-item__name") %>%
html_text()
# scrap all the campion names
champurl <- html %>%
html_nodes("div.champion-index__champion-list") %>%
html_nodes("a") %>%
html_attr("href")
# scrap all the corresponding urls of each champion
position <- html %>%
html_nodes("a") %>%
html_nodes("div.champion-index__champion-item__positions") %>%
html_text()
# scrap champions' available positions
champnum <- c(1:length(champname))
i = 1
while (i <= length(champname)){
position[i] <-  position[i] %>%
str_match_all("[A-Z][a-z]+")
position[[i]] = replace(position[[i]], position[[i]] == "Middle", "Mid")
# replace "Middle" with "Mid" for better future use
position[[i]] = replace(position[[i]], position[[i]] == "Bottom", "Bot")
# replace "Bottom" with "Bot" for better future use
i = i+1
}
# Separate the positions
champinfo <- tibble(name = champname, url = champurl, num = champnum, posi = position) %>%
mutate(url = paste(champinfo$url, sep = ""))
# combine the info into a tibble
m = 1
n = 1
rname <- character(0)
rposi <- character(0)
rrate <- character(0)
rpick <- character(0)
while (m <= length(champname)){
while(n <= length(champinfo$posi[[m]])){
reurl <- read_html(paste(champinfo$url[m], "/", tolower(champinfo$posi[[m]][n,1]), sep = ""))
rname <- c(rname, champinfo$name[m])
rposi <- c(rposi, champinfo$posi[[m]][n,1])
rwin <- reurl %>%
html_nodes("div.champion-box-content") %>%
html_nodes("div.champion-stats-trend-rate") %>%
html_text() %>%
str_match_all("[0-9]+.[0-9]+")
rrate <- c(rrate, rwin[1])
rpick <- c(rpick, rwin[2])
n = n +1
}
n = 1
m = m+1
}
specinfo <- tibble(name = rname, position = rposi, win_rate = rrate, pick_rate = rpick)
if (!("specinfo" %in% dbListTables(con))) {
# create table if it doesn't exist
con %>% dbWriteTable(
"specinfo",
data.frame(time = as_datetime(double(0)), action = integer(0))
)
}
dbWriteTable(con, "specinfo", data, overwrite = TRUE)
View(specinfo)
runApp('finalproj')
runApp('finalproj')
specinfo %>%
filter(position == input$lastbox) %>%
arrange(desc("win_rate")) %>%
head(5) %>%
select(name)
specinfo %>%
filter(position == "Top") %>%
arrange(desc("win_rate")) %>%
head(5) %>%
select(name)
> specinfo %>%
+     filter(position == "Top") %>%
+     arrange(desc("win_rate"))
specinfo %>%
filter(position == "Top") %>%
arrange(desc("win_rate")) %>%
head(5) %>%
select(name)
specinfo %>%
filter(position == "Top")
View(specinfo)
specinfo %>%
filter(position == "Top") %>%
arrange(desc("win_rate"))
library(DBI)
library(tidyverse)
library(rvest)
library(httr)
library(stringr)
library(lubridate)
readRenviron(".Renviron")
host <- "ruby.db.elephantsql.com"
con <- dbConnect(
RPostgres::Postgres(),
dbname = "avlkfgtq",
user = "avlkfgtq", password = Sys.getenv("mykey"), host = host
)
html <- read_html("https://www.op.gg/champion/statistics")
# read the info from the websit
champname <- html %>%
html_nodes("a") %>%
html_nodes("div.champion-index__champion-item__name") %>%
html_text()
# scrap all the campion names
champurl <- html %>%
html_nodes("div.champion-index__champion-list") %>%
html_nodes("a") %>%
html_attr("href")
# scrap all the corresponding urls of each champion
position <- html %>%
html_nodes("a") %>%
html_nodes("div.champion-index__champion-item__positions") %>%
html_text()
# scrap champions' available positions
champnum <- c(1:length(champname))
i = 1
while (i <= length(champname)){
position[i] <-  position[i] %>%
str_match_all("[A-Z][a-z]+")
position[[i]] = replace(position[[i]], position[[i]] == "Middle", "Mid")
# replace "Middle" with "Mid" for better future use
position[[i]] = replace(position[[i]], position[[i]] == "Bottom", "Bot")
# replace "Bottom" with "Bot" for better future use
i = i+1
}
# Separate the positions
champinfo <- tibble(name = champname, url = champurl, num = champnum, posi = position) %>%
mutate(url = paste(champinfo$url, sep = ""))
# combine the info into a tibble
m = 1
n = 1
rname <- character(0)
rposi <- character(0)
rrate <- character(0)
rpick <- character(0)
while (m <= length(champname)){
while(n <= length(champinfo$posi[[m]])){
reurl <- read_html(paste(champinfo$url[m], "/", tolower(champinfo$posi[[m]][n,1]), sep = ""))
rname <- c(rname, champinfo$name[m])
rposi <- c(rposi, champinfo$posi[[m]][n,1])
rwin <- reurl %>%
html_nodes("div.champion-box-content") %>%
html_nodes("div.champion-stats-trend-rate") %>%
html_text() %>%
str_match_all("[0-9]+.[0-9]+")
rrate <- c(rrate, rwin[[1]])
rpick <- c(rpick, rwin[[2]])
n = n +1
}
n = 1
m = m+1
}
specinfo <- tibble(name = rname, position = rposi, win_rate = rrate, pick_rate = rpick)
if (!("specinfo" %in% dbListTables(con))) {
# create table if it doesn't exist
con %>% dbWriteTable(
"specinfo",
data.frame(time = as_datetime(double(0)), action = integer(0))
)
}
View(specinfo)
specinfo %>%
filter(position == "Top") %>%
arrange(desc("win_rate")) %>%
head(5) %>%
select(name)
specinfo %>%
filter(position == "Top")
rwin[1]
rwin
rwin[[1]][1,1]
dbWriteTable(con, "specinfo", specinfo, overwrite = TRUE)
library(DBI)
library(tidyverse)
library(rvest)
library(httr)
library(stringr)
library(lubridate)
readRenviron(".Renviron")
host <- "ruby.db.elephantsql.com"
con <- dbConnect(
RPostgres::Postgres(),
dbname = "avlkfgtq",
user = "avlkfgtq", password = Sys.getenv("mykey"), host = host
)
html <- read_html("https://www.op.gg/champion/statistics")
# read the info from the websit
champname <- html %>%
html_nodes("a") %>%
html_nodes("div.champion-index__champion-item__name") %>%
html_text()
# scrap all the campion names
champurl <- html %>%
html_nodes("div.champion-index__champion-list") %>%
html_nodes("a") %>%
html_attr("href")
# scrap all the corresponding urls of each champion
position <- html %>%
html_nodes("a") %>%
html_nodes("div.champion-index__champion-item__positions") %>%
html_text()
# scrap champions' available positions
champnum <- c(1:length(champname))
i = 1
while (i <= length(champname)){
position[i] <-  position[i] %>%
str_match_all("[A-Z][a-z]+")
position[[i]] = replace(position[[i]], position[[i]] == "Middle", "Mid")
# replace "Middle" with "Mid" for better future use
position[[i]] = replace(position[[i]], position[[i]] == "Bottom", "Bot")
# replace "Bottom" with "Bot" for better future use
i = i+1
}
# Separate the positions
champinfo <- tibble(name = champname, url = champurl, num = champnum, posi = position) %>%
mutate(url = paste(champinfo$url, sep = ""))
# combine the info into a tibble
m = 1
n = 1
rname <- character(0)
rposi <- character(0)
rrate <- character(0)
rpick <- character(0)
while (m <= length(champname)){
while(n <= length(champinfo$posi[[m]])){
reurl <- read_html(paste(champinfo$url[m], "/", tolower(champinfo$posi[[m]][n,1]), sep = ""))
rname <- c(rname, champinfo$name[m])
rposi <- c(rposi, champinfo$posi[[m]][n,1])
rwin <- reurl %>%
html_nodes("div.champion-box-content") %>%
html_nodes("div.champion-stats-trend-rate") %>%
html_text() %>%
str_match_all("[0-9]+.[0-9]+")
rrate <- c(rrate, rwin[[1]][1,1])
rpick <- c(rpick, rwin[[2]][1,1])
n = n +1
}
n = 1
m = m+1
}
specinfo <- tibble(name = rname, position = rposi, win_rate = rrate, pick_rate = rpick)
if (!("specinfo" %in% dbListTables(con))) {
# create table if it doesn't exist
con %>% dbWriteTable(
"specinfo",
data.frame(time = as_datetime(double(0)), action = integer(0))
)
}
rwin
View(rwin)
rrate
library(DBI)
library(tidyverse)
library(rvest)
library(httr)
library(stringr)
library(lubridate)
readRenviron(".Renviron")
host <- "ruby.db.elephantsql.com"
con <- dbConnect(
RPostgres::Postgres(),
dbname = "avlkfgtq",
user = "avlkfgtq", password = Sys.getenv("mykey"), host = host
)
html <- read_html("https://www.op.gg/champion/statistics")
# read the info from the websit
champname <- html %>%
html_nodes("a") %>%
html_nodes("div.champion-index__champion-item__name") %>%
html_text()
# scrap all the campion names
champurl <- html %>%
html_nodes("div.champion-index__champion-list") %>%
html_nodes("a") %>%
html_attr("href")
# scrap all the corresponding urls of each champion
position <- html %>%
html_nodes("a") %>%
html_nodes("div.champion-index__champion-item__positions") %>%
html_text()
# scrap champions' available positions
champnum <- c(1:length(champname))
i = 1
while (i <= length(champname)){
position[i] <-  position[i] %>%
str_match_all("[A-Z][a-z]+")
position[[i]] = replace(position[[i]], position[[i]] == "Middle", "Mid")
# replace "Middle" with "Mid" for better future use
position[[i]] = replace(position[[i]], position[[i]] == "Bottom", "Bot")
# replace "Bottom" with "Bot" for better future use
i = i+1
}
# Separate the positions
champinfo <- tibble(name = champname, url = champurl, num = champnum, posi = position) %>%
mutate(url = paste(champinfo$url, sep = ""))
# combine the info into a tibble
m = 1
n = 1
rname <- character(0)
rposi <- character(0)
rrate <- character(0)
rpick <- character(0)
while (m <= length(champname)){
while(n <= length(champinfo$posi[[m]])){
reurl <- read_html(paste(champinfo$url[m], "/", tolower(champinfo$posi[[m]][n,1]), sep = ""))
rname <- c(rname, champinfo$name[m])
rposi <- c(rposi, champinfo$posi[[m]][n,1])
rwin <- reurl %>%
html_nodes("div.champion-box-content") %>%
html_nodes("div.champion-stats-trend-rate") %>%
html_text() %>%
str_match_all("[0-9]+[.]?[0-9]?")
rrate <- c(rrate, rwin[[1]][1,1])
rpick <- c(rpick, rwin[[2]][1,1])
n = n +1
}
n = 1
m = m+1
}
specinfo <- tibble(name = rname, position = rposi, win_rate = rrate, pick_rate = rpick)
if (!("specinfo" %in% dbListTables(con))) {
# create table if it doesn't exist
con %>% dbWriteTable(
"specinfo",
data.frame(time = as_datetime(double(0)), action = integer(0))
)
}
specinfo %>%
filter(position == "Top")%>%
arrange(desc("win_rate")) %>%
head(5) %>%
select(name)
specinfo %>%
filter(position == "Top")
specinfo %>%
filter(position == "Top")%>%
arrange(desc("win_rate"))
specinfo %>%
filter(position == "Top")%>%
mutate(win_rate == as.numeric(win_rate)) %>%
arrange(desc("win_rate")) %>%
head(5) %>%
select(name)
specinfo %>%
filter(position == "Top")%>%
mutate(win_rate == as.numeric(win_rate))
m = 1
n = 1
rname <- character(0)
rposi <- character(0)
rrate <- list()
rpick <- list()
while (m <= length(champname)){
while(n <= length(champinfo$posi[[m]])){
reurl <- read_html(paste(champinfo$url[m], "/", tolower(champinfo$posi[[m]][n,1]), sep = ""))
rname <- c(rname, champinfo$name[m])
rposi <- c(rposi, champinfo$posi[[m]][n,1])
rwin <- reurl %>%
html_nodes("div.champion-box-content") %>%
html_nodes("div.champion-stats-trend-rate") %>%
html_text() %>%
str_match_all("[0-9]+[.]?[0-9]?")
rrate <- c(rrate, rwin[[1]][1,1])
rpick <- c(rpick, rwin[[2]][1,1])
n = n +1
}
n = 1
m = m+1
}
specinfo %>%
filter(position == "Top")%>%
arrange(desc("win_rate")) %>%
head(5) %>%
select(name)
specinfo %>%
filter(position == "Top")
dbWriteTable(con, "specinfo", specinfo, overwrite = TRUE)
dbDisconnect(con)
specinfo <- tibble(name = rname, position = rposi, win_rate = as.numeric(rrate), pick_rate = rpick)
specinfo %>%
filter(position == "Top")%>%
arrange(desc("win_rate")) %>%
head(5) %>%
select(name)
specinfo <- data.frame(name = rname, position = rposi, win_rate = as.numeric(rrate), pick_rate = rpick)
specinfo %>%
filter(position == "Top")%>%
arrange(desc("win_rate")) %>%
head(5) %>%
select(name)
specinfo %>%
filter(position == "Top")
specinfo <- tibble(name = rname, position = rposi, win_rate = as.numeric(rrate), pick_rate = rpick)
specinfo %>%
filter(position == "Top")
specinfo %>%
filter(position == "Top")%>%
arrange(desc("win_rate")) %>%
head(5) %>%
select(name)
specinfo %>%
filter(position == "Top")%>%
arrange(desc(win_rate)) %>%
head(5) %>%
select(name)
specinfo <- tibble(name = rname, position = rposi, win_rate = rrate, pick_rate = rpick)
specinfo %>%
filter(position == "Top")%>%
arrange(desc(win_rate)) %>%
head(5) %>%
select(name)
specinfo <- tibble(name = rname, position = rposi, win_rate = as.numeric(rrate), pick_rate = as.numeric(rpick))
specinfo %>%
filter(position == "Top")%>%
arrange(desc(win_rate)) %>%
head(5) %>%
select(name)
specinfo %>%
filter(position == "Top")%>%
arrange(desc(win_rate)) %>%
head(5) %>%
select(name, win_rate)
runApp('finalproj')
runApp('finalproj')
runApp('finalproj')
runApp('finalproj')
runApp('finalproj')
dbDisconnect(con)
runApp('finalproj')
dbDisconnect(con)
runApp('finalproj')
shiny::runApp('finalproj')
shiny::runApp('finalproj')
runApp('finalproj')
runApp('finalproj')
dbDisconnect(con)
runApp('finalproj')
host <- "ruby.db.elephantsql.com"
con <- dbConnect(
RPostgres::Postgres(),
dbname = "avlkfgtq",
user = "avlkfgtq", password = Sys.getenv("mykey"), host = host
)
specinfo$name
dbdisconnect(con)
dbDisconnect(con)
host <- "ruby.db.elephantsql.com"
con <- dbPool(
RPostgres::Postgres(),
dbname = "avlkfgtq",
user = "avlkfgtq", password = Sys.getenv("mykey"), host = host
)
library(pool)
con <- dbPool(
RPostgres::Postgres(),
dbname = "avlkfgtq",
user = "avlkfgtq", password = Sys.getenv("mykey"), host = host
)
specinfo %>% tbl("name")
con %>% tbl("name")
con %>% tbl("specinfo")
specinfo <- con %>% tbl("specinfo")
dbDisconnect(con)
runApp('finalproj')
runApp('finalproj')
runApp('finalproj')
View(specinfo)
mytable <- con %>% tbl("specinfo")
View(mytable)
mytable <- con %>% tbl("specinfo") %>% collect()
View(mytable)
mychamp <- con %>% tbl("specinfo") %>% collect()
runApp('finalproj')
onStop(function(){
dbDisconnect(con)
})
runApp('finalproj')
poolClose(con)
runApp('finalproj')
